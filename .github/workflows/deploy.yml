name: üöÄ Deploy to GoDaddy Hosting

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allows manual trigger

jobs:
  # Build and test the application
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üîí Install dependencies
      run: npm ci
      
    - name: üß™ Run tests (if available)
      run: npm test --if-present
      continue-on-error: true
      
    - name: üèóÔ∏è Build application
      run: npm run build
      
    - name: üìä Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: build/
        retention-days: 7

  # Deploy to GoDaddy hosting
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: üì• Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: build/
        
    - name: üîí Create .htaccess file
      run: |
        cat > .htaccess << 'EOF'
        # Security Headers for InooKey Frontend
        <IfModule mod_headers.c>
            Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://fonts.cdnfonts.com; font-src 'self' https://fonts.gstatic.com https://fonts.cdnfonts.com; img-src 'self' data: https:; connect-src 'self' https://calendar.app.google; frame-src 'self' https://calendar.app.google;"
            Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
            Header always set X-XSS-Protection "1; mode=block"
            Header always set X-Frame-Options "SAMEORIGIN"
            Header always set X-Content-Type-Options "nosniff"
            Header always set Referrer-Policy "strict-origin-when-cross-origin"
        </IfModule>
        
        # HTTPS Redirect
        RewriteEngine On
        RewriteCond %{HTTPS} off
        RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
        
        # Gzip Compression
        <IfModule mod_deflate.c>
            AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css application/xml application/xhtml+xml application/rss+xml application/javascript application/x-javascript
        </IfModule>
        
        # Browser Caching
        <IfModule mod_expires.c>
            ExpiresActive on
            ExpiresByType text/css "access plus 1 year"
            ExpiresByType application/javascript "access plus 1 year"
            ExpiresByType image/png "access plus 1 year"
            ExpiresByType image/jpg "access plus 1 year"
            ExpiresByType image/jpeg "access plus 1 year"
            ExpiresByType image/gif "access plus 1 year"
            ExpiresByType image/svg+xml "access plus 1 year"
        </IfModule>
        EOF
        
    - name: üöÄ Deploy to GoDaddy via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: public_html/
        local-dir: build/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/README.md
          **/.env*
          **/.github/**
          **/.gitignore
          **/package*.json
          **/tsconfig.json
          **/tailwind.config.js
          **/postcss.config.js
          **/src/**
          **/public/**
          **/deploy.ps1
          **/GODADDY_DEPLOYMENT_GUIDE.md
          **/SECURITY_CHECKLIST.md
        dangerous-clean-slate: true # Removes old files
        
    - name: üìÅ Upload .htaccess file
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: public_html/
        local-dir: ./
        include: .htaccess
        
    - name: ‚úÖ Deployment complete
      run: |
        echo "üéâ Successfully deployed to GoDaddy hosting!"
        echo "üåê Website: ${{ secrets.WEBSITE_URL }}"
        echo "üìÖ Deployment time: $(date)"
        
    - name: üîî Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
        else
          echo "‚ùå Deployment failed!"
        fi
